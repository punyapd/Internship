@import "./variables";

@font-face {
  font-family: "#{$icomoon-font-family}";
  src: url("#{$icomoon-font-path}/#{$icomoon-font-family}.eot?ibx0sk");
  src: url("#{$icomoon-font-path}/#{$icomoon-font-family}.eot?ibx0sk#iefix")
      format("embedded-opentype"),
    url("#{$icomoon-font-path}/#{$icomoon-font-family}.ttf?ibx0sk")
      format("truetype"),
    url("#{$icomoon-font-path}/#{$icomoon-font-family}.woff?ibx0sk")
      format("woff"),
    url("#{$icomoon-font-path}/#{$icomoon-font-family}.svg?ibx0sk##{$icomoon-font-family}")
      format("svg");
  font-weight: normal;
  font-style: normal;
  font-display: block;
}

[class^="icon-"],
[class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: "#{$icomoon-font-family}" !important;
  speak: never;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-notification {
  &:before {
    content: $icon-notification;
  }
}
.icon-search {
  &:before {
    content: $icon-search;
  }
}
.icon-ticket {
  &:before {
    content: $icon-ticket;
  }
}
.icon-agent {
  &:before {
    content: $icon-agent;
  }
}
.icon-article {
  &:before {
    content: $icon-article;
  }
}
.icon-contact {
  &:before {
    content: $icon-contact;
  }
}
.icon-filter {
  &:before {
    content: $icon-filter;
  }
}
.icon-idea {
  &:before {
    content: $icon-idea;
  }
}
.icon-more {
  &:before {
    content: $icon-more;
  }
}
.icon-overview {
  &:before {
    content: $icon-overview;
  }
}
.icon-settings {
  &:before {
    content: $icon-settings;
  }
}
.icon-sort {
  &:before {
    content: $icon-sort;
  }
}
.icon-subscription {
  &:before {
    content: $icon-subscription;
  }
}
